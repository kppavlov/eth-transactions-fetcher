import { isValidRlpHex } from "../../../routes/validators/utils";

describe("isValidRlpHex", () => {
  it("should return error if the rlpHex is not a hex string", () => {
    expect(
      isValidRlpHex(
        "f90110b842307866633262336236646233386135316462336239636239356465323962373139646538646562393936333036323665346234623939646630353666666237663265b842307834383630336637616466663766626663326131306232326136373130333331656536386632653464316364373361353834643537633838323164663739333536b842307863626339323065376262383963626362353430613436396131363232366266313035373832353238336162386561633366343564303038313165656638613634b842307836643630346666633634346132383266636138636238653737386531653366383234356438626431643439333236653330313661336338373862613063626264",
      ),
    ).toEqual({ error: "Not a valid hex string" });
  });

  it("should return error if the rlpHex is an array after decoding nd not all of the values are valid transaction hashes", () => {
    expect(
        isValidRlpHex(
            "0xf90110b842307866633262336236646233386135316462336239636239356465323962373139646538646562393936333036323665346234623939646630353666666237663265b842307834383630336637616466663766626663326131306232326136373130333331656536386632653464316364373361353834643537633838323164663739333536b842307863626339323065376262383963626362353430613436396131363232366266313035373832353238336162386561633366343564303038313165656638613634b842307836643630346666633634346132383266636138636238653737386531653366383234356438626431643439333236653330313661336338373862613063626264",
        ),
    ).toEqual({ error: "Not all provided values are correct transaction hashes" });
  });

  it("should return an array of transaction hashes if the rlpHex is an array after decoding", () => {
    expect(
        isValidRlpHex(
            "0xf842a0fc2b3b6db38a51db3b9cb95de29b719de8deb99630626e4b4b99df056ffb7f2ea048603f7adff7fbfc2a10b22a6710331ee68f2e4d1cd73a584d57c8821df79356",
        ),
    ).toEqual(["0xfc2b3b6db38a51db3b9cb95de29b719de8deb99630626e4b4b99df056ffb7f2e", "0x48603f7adff7fbfc2a10b22a6710331ee68f2e4d1cd73a584d57c8821df79356"]);
  });

  it("should return a single transaction id if the rlpHex is not array after decoding", () => {
    expect(
        isValidRlpHex(
            "0xa0fc2b3b6db38a51db3b9cb95de29b719de8deb99630626e4b4b99df056ffb7f2e",
        ),
    ).toEqual("0xfc2b3b6db38a51db3b9cb95de29b719de8deb99630626e4b4b99df056ffb7f2e");
  });
});
